// App.tsx ou App.js
import React from "react";
import "./App.css";
import {
  PieChart,
  Pie,
  Tooltip,
  BarChart,
  XAxis,
  YAxis,
  Legend,
  CartesianGrid,
  Bar,
} from "recharts";

const App: React.FC = () => {
  const data = [
    { name: "Facebook", users: 2000000000 },
    { name: "Instagram", users: 1500000000 },
    { name: "Twitter", users: 1000000000 },
    { name: "Telegram", users: 500000000 },
  ];

  return (
    <div style={{ textAlign: "center" }}>
      <h1>Dashboard</h1>
      <h1>Welcome !</h1>
      <div className="App">
        <PieChart width={400} height={400}>
          <Pie
            dataKey="users"
            isAnimationActive={false}
            data={data}
            cx={200}
            cy={200}
            outerRadius={80}
            fill="#8884d8"
            label
          />
          <Tooltip />
        </PieChart>
        <BarChart
          width={500}
          height={300}
          data={data}
          margin={{
            top: 5,
            right: 30,
            left: 80,
            bottom: 5,
          }}
          barSize={20}
        >
          <XAxis
            dataKey="name"
            scale="point"
            padding={{ left: 10, right: 10 }}
          />
          <YAxis />
          <Tooltip />
          <Legend />
          <CartesianGrid strokeDasharray="3 3" />
          <Bar dataKey="users" fill="#8884d8" background={{ fill: "#eee" }} />
        </BarChart>
      </div>
    </div>
  );
};

export default App;


import React from "react";
import "./App.css";
import {
  PieChart,
  Pie,
  Tooltip,
  BarChart,
  XAxis,
  YAxis,
  Legend,
  CartesianGrid,
  Bar,
} from "recharts";
import CanvasJSReact from '@canvasjs/react-charts';

const CanvasJSChart = CanvasJSReact.CanvasJSChart;

const App: React.FC = () => {
  const data = [
    { name: "Facebook", users: 20000 },
    { name: "Instagram", users: 15000 },
    { name: "Twitter", users: 10000 },
    { name: "Telegram", users: 5000 },
  ];

  const options = {
    animationEnabled: true,
    exportEnabled: true,
    theme: "light2",
    title: {
      text: "Bounce Rate by Week of Year"
    },
    axisY: {
      title: "Bounce Rate",
      suffix: "%"
    },
    axisX: {
      title: "Week of Year",
      prefix: "W",
      interval: 2
    },
    data: [{
      type: "line",
      toolTipContent: "Week {x}: {y}%",
      dataPoints: [
        { x: 1, y: 64 },
        { x: 2, y: 61 },
        { x: 3, y: 64 },
        { x: 4, y: 62 },
        { x: 5, y: 64 },
        { x: 6, y: 60 },
        { x: 7, y: 58 },
        { x: 8, y: 59 },
        { x: 9, y: 53 },
        { x: 10, y: 54 },
        { x: 11, y: 61 },
        { x: 12, y: 60 },
        { x: 13, y: 55 },
        { x: 14, y: 60 },
        { x: 15, y: 56 },
        { x: 16, y: 60 },
        { x: 17, y: 59.5 },
        { x: 18, y: 63 },
        { x: 19, y: 58 },
        { x: 20, y: 54 },
        { x: 21, y: 59 },
        { x: 22, y: 64 },
        { x: 23, y: 59 }
      ]
    }]
  };

  return (
    <div className="container">
      <header className="header">
        <div className="header-title">
          <h1>Dashboard</h1>
          <p>Welcome!</p>
        </div>
        <div className="header-buttons">
          <button className="button">Last 30 Days</button>
          <button className="button button-primary">Reports</button>
        </div>
      </header>

      <div className="main-content">
        <div className="chart bar-chart">
          <BarChart
            width={1600}
            height={500}
            data={data}
            margin={{
              top: 15,
              right: 60,
              left: 900,
              bottom: 120,
            }}
            barSize={30}
          >
            <XAxis dataKey="name" scale="point" padding={{ left: 10, right: 10 }} />
            <YAxis />
            <Tooltip />
            <Legend />
            <CartesianGrid strokeDasharray="3 3" />
            <Bar dataKey="users" fill="#8884d8" background={{ fill: "#eee" }} />
          </BarChart>
        </div>

        <div className="chart pie-chart">
          <PieChart width={1800} height={400}>
            <Pie
              dataKey="users"
              isAnimationActive={false}
              data={data}
              cx={1250}
              cy={150}
              outerRadius={80}
              fill="#8884d8"
              label
            />
            <Tooltip />
          </PieChart>
        </div>

        <div className="chart line-chart">
          <CanvasJSChart options={options} width={600} height={300} />
        </div>
      </div>
    </div>
  );
};

export default App;




import React from "react";
import "./App.css";
import {
  PieChart,
  Pie,
  Tooltip,
  BarChart,
  XAxis,
  YAxis,
  Legend,
  CartesianGrid,
  Bar,
} from "recharts";
import CanvasJSReact from "@canvasjs/react-charts";

import { ComposableMap, Geographies, Geography } from "react-simple-maps";

const geoUrl =
  "https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json";

interface GeographyProps {
  rsmKey: string;
  geography: any;
}

interface GeographiesProps {
  geographies: GeographyProps[];
}

function MapChart() {
  return (
    <ComposableMap>
      <Geographies geography={geoUrl}>
        {({ geographies }: GeographiesProps) =>
          geographies.map((geo: GeographyProps) => (
            <Geography key={geo.rsmKey} geography={geo.geography} />
          ))
        }
      </Geographies>
    </ComposableMap>
  );
}

const CanvasJSChart = CanvasJSReact.CanvasJSChart;

const App: React.FC = () => {
  const data = [
    { name: "Facebook", users: 20000 },
    { name: "Instagram", users: 15000 },
    { name: "Twitter", users: 10000 },
    { name: "Telegram", users: 5000 },
  ];

  const options = {
    animationEnabled: true,
    exportEnabled: true,
    theme: "light2",
    title: {
      text: "Customers Overview",
    },
    axisY: {
      title: "Bounce Rate",
      suffix: "%",
    },
    axisX: {
      title: "Week of Year",
      prefix: "W",
      interval: 2,
    },
    data: [
      {
        type: "line",
        toolTipContent: "Week {x}: {y}%",
        dataPoints: [
          { x: 1, y: 64 },
          { x: 2, y: 61 },
          { x: 20, y: 54 },
          { x: 21, y: 59 },
          { x: 22, y: 64 },
          { x: 23, y: 59 },
        ],
      },
    ],
  };

  return (
    <div className="container">
      <header className="header">
        <div className="header-title">
          <h1>Dashboard</h1>
          <p>Welcome!</p>
        </div>
        <div className="header-buttons">
          <button className="button">Last 30 Days</button>
          <button className="button button-primary">Reports</button>
        </div>
      </header>

      <div className="main-content">
        <div className="chart line-chart">
          <div className="chart-title">Customers Overview</div>
          <div className="chart-subtitle">When customers have joined in the time.</div>

          <div className="stat-container">
            <div className="stat-item">
              <h2>932</h2>
              <p>Customers</p>
              <span>↑ 12.37%</span>
            </div>
            <div className="stat-item">
              <h2>28.49%</h2>
              <p>Doing meetings</p>
              <span className="negative">↓ 12.37%</span>
            </div>
            <div className="stat-item">
              <h2>34</h2>
              <p>Customers by coach</p>
            </div>
          </div>
          <CanvasJSChart options={options} width={600} height={300} />
        </div>

        <div className="chart bar-chart">
          <div className="chart-title">Events</div>
          <div className="chart-subtitle">Our events and their status.</div>
          <BarChart
            width={600}
            height={300}
            data={data}
            margin={{
              top: 15,
              right: 30,
              left: 20,
              bottom: 50,
            }}
            barSize={30}
          >
            <XAxis dataKey="name" scale="point" padding={{ left: 10, right: 10 }} />
            <YAxis />
            <Tooltip />
            <Legend />
            <CartesianGrid strokeDasharray="3et je les mets dans mon prochain tiramisu 3" />
            <Bar dataKey="users" fill="#8884d8" background={{ fill: "#eee" }} />
          </BarChart>
        </div>

        <div className="chart map-chart">
          <div className="chart-title">Customers by Country</div>
          <div className="chart-subtitle">Distribution of customers by country.</div>
          <MapChart /> {/* Call the MapChart component here */}
        </div>

        <div className="chart pie-chart">
          <div className="chart-title">Meetings top sources</div>
          <PieChart width={600} height={300}>
            <Pie
              dataKey="users"
              isAnimationActive={false}
              data={data}
              cx={300}
              cy={150}
              outerRadius={120}
              fill="#8884d8"
              label
            />
            <Tooltip />
          </PieChart>
        </div>
      </div>
    </div>
  );
};

export default App;
